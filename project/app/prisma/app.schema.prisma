generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-arm64-openssl-3.0.x", "rhel-openssl-3.0.x"]
    output        = "../node_modules/@prisma-app/client"
}

datasource db {
    provider = "postgresql"
    url      = env("APP_DATABASE_URL")
}

enum USER_STATUS {
    ACTIVE
    PENDING
    INACTIVE
}

model User {
    id              String      @id @default(uuid())
    auth_id         String      @unique
    email           String      @unique
    email_confirmed Boolean     @default(false)
    created_at      DateTime    @default(now())
    display_name    String?
    status          USER_STATUS @default(INACTIVE)
    membership      Membership?
}

model Membership {
    id      String @id @default(uuid())
    user_id String @unique
    user    User   @relation(fields: [user_id], references: [id])

    current_period_ends    DateTime @default(now())
    stripe_subscription_id String?
    stripe_customer_id     String?

    plan_id String
    plan    Plan   @relation(fields: [plan_id], references: [id])
}

enum PLAN_TIER {
    BASIC
    PREMIUM
}

model Plan {
    id                String    @id @default(uuid())
    name              String    @unique
    description       String
    duration_days     Int
    price             Float
    old_price         Float
    features          String[]
    not_features      String[]
    featured          Boolean   @default(false)
    stripe_product_id String
    tier              PLAN_TIER @default(BASIC)
    subtext           String

    memberships Membership[]
}
