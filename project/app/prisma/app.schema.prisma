generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-arm64-openssl-3.0.x", "rhel-openssl-3.0.x"]
    output        = "../node_modules/@prisma-app/client"
}

datasource db {
    provider = "postgresql"
    url      = env("APP_DATABASE_URL")
}

enum USER_STATUS {
    ACTIVE
    PENDING
    INACTIVE
}

model User {
    id           String      @id @default(uuid())
    auth_id      String      @unique
    email        String      @unique
    created_at   DateTime    @default(now())
    display_name String?
    status       USER_STATUS @default(INACTIVE)
    membership   Membership?
    projects     Project[]
}

model Membership {
    id      String @id @default(uuid())
    user_id String @unique
    user    User   @relation(fields: [user_id], references: [id])

    stripe_customer_id  String
    current_period_ends DateTime?

    plan_id String
    plan    Plan   @relation(fields: [plan_id], references: [id])

    max_project_token Int @default(0)
    project_tokens    Int @default(0)
}

enum PLAN_TIER {
    OTP
    SUBSCRIPTION
}

model Plan {
    id           String   @id @default(uuid())
    name         String
    description  String
    price        Float
    old_price    Float
    features     String[]
    not_features String[]
    featured     Boolean  @default(false)
    subtext      String
    money_saved  Float    @default(0)

    stripe_product_id String    @unique
    tier              PLAN_TIER
    gen_token         Int
    project_token     Int

    memberships Membership[]
}

model Project {
    id            String  @id @default(uuid())
    max_gen_token Int
    gen_token     Int     @default(0)
    user          User?   @relation(fields: [user_id], references: [id])
    user_id       String?
}
